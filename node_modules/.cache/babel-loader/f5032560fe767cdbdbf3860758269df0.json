{"ast":null,"code":"var _jsxFileName = \"D:\\\\dubbizle\\\\gistapi\\\\src\\\\components\\\\GistList.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { getPublicGists } from '../services/gistService';\nimport Gist from './Gist';\nimport { LoadinContext, MyContext } from '../MyContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GistList = () => {\n  _s();\n  const {\n    data,\n    setData\n  } = useContext(MyContext);\n  const {\n    load,\n    setLoad\n  } = useContext(LoadinContext);\n  const [submit, setSubmit] = useState(false);\n  useEffect(() => {\n    if (val === \"\") {\n      console.log(\"yes\");\n      return getPublicGists().then(gist => {\n        setData(gist.data);\n      });\n    }\n    ;\n    getPublicGists().then(publicGists => {\n      setData(publicGists.data);\n      setLoad(false);\n      setSubmit(true);\n    });\n  }, [setSubmit]);\n  console.log({\n    load: load\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: load ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }, this) : data === null || data === void 0 ? void 0 : data.map((gist, i) => /*#__PURE__*/_jsxDEV(Gist, {\n      gist: gist,\n      index: i\n    }, gist.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 54\n    }, this))\n  }, void 0, false);\n};\n_s(GistList, \"6Q5Gajeb2eGH0RVUdeFNLXp9UTA=\");\n_c = GistList;\nexport default GistList;\nvar _c;\n$RefreshReg$(_c, \"GistList\");","map":{"version":3,"names":["React","useContext","useEffect","useState","getPublicGists","Gist","LoadinContext","MyContext","jsxDEV","_jsxDEV","Fragment","_Fragment","GistList","_s","data","setData","load","setLoad","submit","setSubmit","val","console","log","then","gist","publicGists","children","style","display","justifyContent","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","map","i","index","id","_c","$RefreshReg$"],"sources":["D:/dubbizle/gistapi/src/components/GistList.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport { getPublicGists } from '../services/gistService';\r\nimport Gist from './Gist';\r\nimport { LoadinContext, MyContext } from '../MyContext';\r\n\r\nconst GistList = () => {\r\n    const { data, setData } = useContext(MyContext);\r\n    const { load, setLoad } = useContext(LoadinContext);\r\n    const [submit, setSubmit] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (val === \"\") {\r\n            console.log(\"yes\")\r\n            return getPublicGists().then((gist) => {\r\n                setData(gist.data)\r\n            })\r\n        };\r\n        getPublicGists().then((publicGists) => {\r\n            setData(publicGists.data)\r\n            setLoad(false)\r\n            setSubmit(true)\r\n        })\r\n    }, [setSubmit]);\r\n    console.log({ load: load })\r\n    return (\r\n        <>\r\n            {\r\n                load ?\r\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }\r\n                    } >\r\n                        <h1>Loading ...</h1>\r\n                    </div > : data?.map((gist, i) => <Gist gist={gist} key={gist.id} index={i} />)}\r\n            {/* // {(submit && data.length === 0) ? <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}> <h1>No Gist Found</h1></div > : \"\"}\r\n            // {data?.map((gist, i) => <Gist gist={gist} key={gist.id} index={i} />)} */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GistList\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,cAAc,QAAQ,yBAAyB;AACxD,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,aAAa,EAAEC,SAAS,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGd,UAAU,CAACM,SAAS,CAAC;EAC/C,MAAM;IAAES,IAAI;IAAEC;EAAQ,CAAC,GAAGhB,UAAU,CAACK,aAAa,CAAC;EACnD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE3CD,SAAS,CAAC,MAAM;IACZ,IAAIkB,GAAG,KAAK,EAAE,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;MAClB,OAAOlB,cAAc,CAAC,CAAC,CAACmB,IAAI,CAAEC,IAAI,IAAK;QACnCT,OAAO,CAACS,IAAI,CAACV,IAAI,CAAC;MACtB,CAAC,CAAC;IACN;IAAC;IACDV,cAAc,CAAC,CAAC,CAACmB,IAAI,CAAEE,WAAW,IAAK;MACnCV,OAAO,CAACU,WAAW,CAACX,IAAI,CAAC;MACzBG,OAAO,CAAC,KAAK,CAAC;MACdE,SAAS,CAAC,IAAI,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EACfE,OAAO,CAACC,GAAG,CAAC;IAAEN,IAAI,EAAEA;EAAK,CAAC,CAAC;EAC3B,oBACIP,OAAA,CAAAE,SAAA;IAAAe,QAAA,EAEQV,IAAI,gBACAP,OAAA;MAAKkB,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAC7E;MAAAJ,QAAA,eACGjB,OAAA;QAAAiB,QAAA,EAAI;MAAW;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,GAAGpB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEqB,GAAG,CAAC,CAACX,IAAI,EAAEY,CAAC,kBAAK3B,OAAA,CAACJ,IAAI;MAACmB,IAAI,EAAEA,IAAK;MAAea,KAAK,EAAED;IAAE,GAAlBZ,IAAI,CAACc,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAAC,gBAGxF,CAAC;AAEX,CAAC;AAAArB,EAAA,CA/BKD,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAiCd,eAAeA,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}